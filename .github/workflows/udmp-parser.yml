name: Builds

on: [push, pull_request]

jobs:
  Windows:
    runs-on: windows-latest 
    strategy:
      fail-fast: false
      matrix:
        generator: ['ninja', 'msvc']
        arch: ['win32', 'win64']
        exclude:
          # Ninja doesn't support the -A arch options with CMake
          - generator: ninja
            arch: win32

    name: Windows latest / ${{ matrix.generator }}.${{ matrix.arch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Setup vs prompt
      uses: ilammy/msvc-dev-cmd@v1

    - name: Build with Ninja/cl
      if: matrix.generator == 'ninja'
      run: |
        cd src\build
        .\build-release.bat

    - name: Build with msvc
      if: matrix.generator == 'msvc'
      run: |
        cd src\build
        .\build-release-msvc.bat ${{ matrix.arch }}

    - name: Upload artifacts
      if: matrix.generator == 'ninja'
      uses: actions/upload-artifact@v3
      with:
        name: bin-${{ matrix.arch }}.RelWithDebInfo
        path: |
          src/build/parser/parser.exe
          src/build/parser/parser.pdb

  Linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: ['clang', 'gcc']

    name: Ubuntu Latest / ${{ matrix.compiler }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Installing dependencies
      run: |
        sudo apt-get -y update
        sudo apt install -y g++-12 ninja-build
        sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"

    - name: Build with gcc
      if: matrix.compiler == 'gcc'
      env:
        CC: gcc-12
        CXX: g++-12
      run: |
        cd src/build
        chmod u+x ./build-release.sh
        ./build-release.sh

    - name: Build with clang
      if: matrix.compiler == 'clang'
      env:
        CC: clang-15
        CXX: clang++-15
      run: |
        cd src/build
        chmod u+x ./build-release.sh
        ./build-release.sh

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: bin-lin64-${{ matrix.compiler }}.Release
        path: |
          src/build/parser

  OSX:
    runs-on: macos-latest
    strategy:
      fail-fast: false

    name: OSX Latest / clang
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build with clang
      env:
        CC: clang
        CXX: clang++
      run: |
        cd src/build
        chmod u+x ./build-release-osx.sh
        ./build-release-osx.sh

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: bin-osxx64-clang.Release
        path: |
          src/build/parser
