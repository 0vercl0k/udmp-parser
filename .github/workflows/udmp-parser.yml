name: Builds

on: [push, pull_request]


jobs:
  Windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        generator: ['ninja', 'msvc']
        arch: ['x64'] #, 'x86', 'arm64']
        python-version: [3.9]
        exclude:
          # Ninja doesn't support the -A arch options with CMake
          - generator: ninja
            arch: x86
    env:
      CMAKE_CONFIG: RelWithDebInfo
    name: Windows latest / ${{ matrix.generator }}.${{ matrix.arch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python pre-requisites
      shell: pwsh
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --user --upgrade -r src/python/requirements.txt

    - name: Build with Ninja/cl
      if: matrix.generator == 'ninja'
      run: |
        cd src\build
        .\build-release.bat

    - name: Build (msvc)
      if: matrix.generator == 'msvc'
      shell: pwsh
      run: |
        Import-Module .\.github\Invoke-VisualStudio.ps1
        Invoke-VisualStudio2022${{ matrix.arch }}
        mkdir ./build
        cmake -S ./src -B ./build -A ${{ matrix.arch }} ${{ env.CMAKE_CONFIG }}
        cmake --build ./build --verbose --config ${{ env.CMAKE_CONFIG }}
        cmake --install ./build --config ${{ env.CMAKE_CONFIG }} --prefix ./artifact --verbose

    - name: Python Binding Tests (msvc)
      if: matrix.generator == 'msvc'
      shell: pwsh
      run: |
        cd src/python
        python -m pip install -r tests/requirements.txt -U
        python -m pip install --user -U .
        pytest -vvv ./tests
        cd ../..

    - name: Upload artifacts (ninja)
      if: matrix.generator == 'ninja'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.generator }}-bin-${{ matrix.arch }}.${{ env.CMAKE_CONFIG }}
        path: |
          src/build/parser/parser.exe
          src/build/parser/parser.pdb

    - name: Upload artifacts (msvc)
      if: matrix.generator == 'msvc'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.generator }}-bin-${{ matrix.arch }}.${{ env.CMAKE_CONFIG }}
        path: |
          artifact/

  Linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: ['clang', 'gcc']
        python-version: [3.9]

    name: Ubuntu Latest / ${{ matrix.compiler }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python pre-requisites
      shell: bash
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --user --upgrade -r src/python/requirements.txt

    - name: Installing dependencies
      run: |
        sudo apt-get -y update
        sudo apt install -y g++ ninja-build
        sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"

    - name: Build with gcc
      if: matrix.compiler == 'gcc'
      env:
        CC: gcc
        CXX: g++
      run: |
        cd src/build
        chmod u+x ./build-release.sh
        ./build-release.sh

    - name: Build with clang
      if: matrix.compiler == 'clang'
      env:
        CC: clang
        CXX: clang++
      run: |
        cd src/build
        chmod u+x ./build-release.sh
        ./build-release.sh

    - name: Python Binding Tests
      run: |
        cd src/python
        python -m pip install -r tests/requirements.txt -U
        python -m pip install --user -U .
        pytest -vvv ./tests
        cd ../..

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: bin-lin64-${{ matrix.compiler }}.Release
        path: |
          src/build/parser

  OSX:
    runs-on: macos-latest
    strategy:
      fail-fast: false

    name: OSX Latest / clang
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install Python pre-requisites
      shell: bash
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --user --upgrade -r src/python/requirements.txt

    - name: Build with clang
      env:
        CC: clang
        CXX: clang++
      run: |
        cd src/build
        chmod u+x ./build-release-osx.sh
        ./build-release-osx.sh

    - name: Python Binding Tests
      run: |
        cd src/python
        python -m pip install -r tests/requirements.txt -U
        python -m pip install --user -U .
        pytest -vvv ./tests
        cd ../..

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: bin-osxx64-clang.Release
        path: |
          src/build/parser
